/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShowsImport } from './routes/shows'
import { Route as GamesImport } from './routes/games'
import { Route as StatsRouteImport } from './routes/stats/route'
import { Route as IndexImport } from './routes/index'
import { Route as StatsIndexImport } from './routes/stats/index'
import { Route as StatsShowPlatformYearsImport } from './routes/stats/show-platform-years'
import { Route as StatsGameDaysImport } from './routes/stats/game-days'
import { Route as StatsGameCategoriesImport } from './routes/stats/game-categories'

// Create Virtual Routes

const ProjectsLazyImport = createFileRoute('/projects')()

// Create/Update Routes

const ProjectsLazyRoute = ProjectsLazyImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/projects.lazy').then((d) => d.Route))

const ShowsRoute = ShowsImport.update({
  id: '/shows',
  path: '/shows',
  getParentRoute: () => rootRoute,
} as any)

const GamesRoute = GamesImport.update({
  id: '/games',
  path: '/games',
  getParentRoute: () => rootRoute,
} as any)

const StatsRouteRoute = StatsRouteImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StatsIndexRoute = StatsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StatsRouteRoute,
} as any)

const StatsShowPlatformYearsRoute = StatsShowPlatformYearsImport.update({
  id: '/show-platform-years',
  path: '/show-platform-years',
  getParentRoute: () => StatsRouteRoute,
} as any)

const StatsGameDaysRoute = StatsGameDaysImport.update({
  id: '/game-days',
  path: '/game-days',
  getParentRoute: () => StatsRouteRoute,
} as any)

const StatsGameCategoriesRoute = StatsGameCategoriesImport.update({
  id: '/game-categories',
  path: '/game-categories',
  getParentRoute: () => StatsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/stats': {
      id: '/stats'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof StatsRouteImport
      parentRoute: typeof rootRoute
    }
    '/games': {
      id: '/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesImport
      parentRoute: typeof rootRoute
    }
    '/shows': {
      id: '/shows'
      path: '/shows'
      fullPath: '/shows'
      preLoaderRoute: typeof ShowsImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsLazyImport
      parentRoute: typeof rootRoute
    }
    '/stats/game-categories': {
      id: '/stats/game-categories'
      path: '/game-categories'
      fullPath: '/stats/game-categories'
      preLoaderRoute: typeof StatsGameCategoriesImport
      parentRoute: typeof StatsRouteImport
    }
    '/stats/game-days': {
      id: '/stats/game-days'
      path: '/game-days'
      fullPath: '/stats/game-days'
      preLoaderRoute: typeof StatsGameDaysImport
      parentRoute: typeof StatsRouteImport
    }
    '/stats/show-platform-years': {
      id: '/stats/show-platform-years'
      path: '/show-platform-years'
      fullPath: '/stats/show-platform-years'
      preLoaderRoute: typeof StatsShowPlatformYearsImport
      parentRoute: typeof StatsRouteImport
    }
    '/stats/': {
      id: '/stats/'
      path: '/'
      fullPath: '/stats/'
      preLoaderRoute: typeof StatsIndexImport
      parentRoute: typeof StatsRouteImport
    }
  }
}

// Create and export the route tree

interface StatsRouteRouteChildren {
  StatsGameCategoriesRoute: typeof StatsGameCategoriesRoute
  StatsGameDaysRoute: typeof StatsGameDaysRoute
  StatsShowPlatformYearsRoute: typeof StatsShowPlatformYearsRoute
  StatsIndexRoute: typeof StatsIndexRoute
}

const StatsRouteRouteChildren: StatsRouteRouteChildren = {
  StatsGameCategoriesRoute: StatsGameCategoriesRoute,
  StatsGameDaysRoute: StatsGameDaysRoute,
  StatsShowPlatformYearsRoute: StatsShowPlatformYearsRoute,
  StatsIndexRoute: StatsIndexRoute,
}

const StatsRouteRouteWithChildren = StatsRouteRoute._addFileChildren(
  StatsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/stats': typeof StatsRouteRouteWithChildren
  '/games': typeof GamesRoute
  '/shows': typeof ShowsRoute
  '/projects': typeof ProjectsLazyRoute
  '/stats/game-categories': typeof StatsGameCategoriesRoute
  '/stats/game-days': typeof StatsGameDaysRoute
  '/stats/show-platform-years': typeof StatsShowPlatformYearsRoute
  '/stats/': typeof StatsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/games': typeof GamesRoute
  '/shows': typeof ShowsRoute
  '/projects': typeof ProjectsLazyRoute
  '/stats/game-categories': typeof StatsGameCategoriesRoute
  '/stats/game-days': typeof StatsGameDaysRoute
  '/stats/show-platform-years': typeof StatsShowPlatformYearsRoute
  '/stats': typeof StatsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/stats': typeof StatsRouteRouteWithChildren
  '/games': typeof GamesRoute
  '/shows': typeof ShowsRoute
  '/projects': typeof ProjectsLazyRoute
  '/stats/game-categories': typeof StatsGameCategoriesRoute
  '/stats/game-days': typeof StatsGameDaysRoute
  '/stats/show-platform-years': typeof StatsShowPlatformYearsRoute
  '/stats/': typeof StatsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/stats'
    | '/games'
    | '/shows'
    | '/projects'
    | '/stats/game-categories'
    | '/stats/game-days'
    | '/stats/show-platform-years'
    | '/stats/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/games'
    | '/shows'
    | '/projects'
    | '/stats/game-categories'
    | '/stats/game-days'
    | '/stats/show-platform-years'
    | '/stats'
  id:
    | '__root__'
    | '/'
    | '/stats'
    | '/games'
    | '/shows'
    | '/projects'
    | '/stats/game-categories'
    | '/stats/game-days'
    | '/stats/show-platform-years'
    | '/stats/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  StatsRouteRoute: typeof StatsRouteRouteWithChildren
  GamesRoute: typeof GamesRoute
  ShowsRoute: typeof ShowsRoute
  ProjectsLazyRoute: typeof ProjectsLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  StatsRouteRoute: StatsRouteRouteWithChildren,
  GamesRoute: GamesRoute,
  ShowsRoute: ShowsRoute,
  ProjectsLazyRoute: ProjectsLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/stats",
        "/games",
        "/shows",
        "/projects"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/stats": {
      "filePath": "stats/route.tsx",
      "children": [
        "/stats/game-categories",
        "/stats/game-days",
        "/stats/show-platform-years",
        "/stats/"
      ]
    },
    "/games": {
      "filePath": "games.tsx"
    },
    "/shows": {
      "filePath": "shows.tsx"
    },
    "/projects": {
      "filePath": "projects.lazy.tsx"
    },
    "/stats/game-categories": {
      "filePath": "stats/game-categories.tsx",
      "parent": "/stats"
    },
    "/stats/game-days": {
      "filePath": "stats/game-days.tsx",
      "parent": "/stats"
    },
    "/stats/show-platform-years": {
      "filePath": "stats/show-platform-years.tsx",
      "parent": "/stats"
    },
    "/stats/": {
      "filePath": "stats/index.tsx",
      "parent": "/stats"
    }
  }
}
ROUTE_MANIFEST_END */
